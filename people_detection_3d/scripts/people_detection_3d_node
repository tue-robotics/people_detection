#!/usr/bin/env python
from __future__ import print_function

# ROS modules
import rospy
from cv_bridge import CvBridge, CvBridgeError

# People detection 3D modules
from people_detection_3d import PeopleDetector3D
from people_detection_3d_msgs.srv import DetectPeople3D, DetectPeople3DResponse

class PeopleDetection3DNode:
    def __init__(self):
        self._bridge = CvBridge()
        self._detect_people_3d_srv = rospy.Service('detect_people_3d',
                DetectPeople3D,
                self._detect_people_3d_srv)
        self._people_detector_3d = PeopleDetector3D()

        rospy.loginfo("PeopleDetection3DNode initialized:")

    def _detect_people_3d_srv(self, req):
        """
        Callback when the DetectPeople3D service is called
        :param req: DetectPeople3DRequest (with a .image attribute)
        :return: DetectPeople3DResponse (with a .people attribute)
        """
        # Convert to opencv images
        try:
            bgr_image = self._bridge.imgmsg_to_cv2(req.image, "bgr8")
        except CvBridgeError as e:
            raise Exception("Could not convert image to opencv image: %s" % str(e))

        rospy.loginfo("Detecting people in incoming image")
        people, _ = self._people_detector.recognize(bgr_image)

        return DetectPeople3DResponse(people=people)

if __name__ == '__main__':
    rospy.init_node('people_detection_3d')
    node = PeopleDetection3DNode()
    rospy.spin()
