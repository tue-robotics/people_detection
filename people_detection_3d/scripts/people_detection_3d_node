#!/usr/bin/env python

# ROS modules
import rospy

# People detection 3D modules
from people_detection_3d import PeopleDetector3D
from people_detection_3d_msgs.srv import DetectPeople3D, DetectPeople3DResponse

class PeopleDetection3DNode:
    def __init__(self):
        self._detect_people_3d_srv = rospy.Service('detect_people_3d',
                DetectPeople3D,
                self._detect_people_3d_srv)
        self._people_detector_3d = PeopleDetector3D()

        rospy.loginfo("PeopleDetection3DNode initialized:")

    def _detect_people_3d_srv(self, req):
        """
        Callback when the DetectPeople3D service is called
        :param req: DetectPeople3DRequest (with .image_rgb, .image_depth and
            .camera_info_depth attributes)
        :return: DetectPeople3DResponse (with a .people attribute)
        """
        # Convert to opencv images
        rospy.loginfo("Detecting people in 3D from incoming RGB-D image")
        people3d = self._people_detector_3d.recognize(req.image_rgb,
                req.image_depth, req.camera_info_depth)

        return DetectPeople3DResponse(people=people3d)

if __name__ == '__main__':
    rospy.init_node('people_detection_3d')
    node = PeopleDetection3DNode()
    rospy.spin()
