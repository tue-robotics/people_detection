#!/usr/bin/env python
from __future__ import print_function
import time
import cv2

import rospy
from cv_bridge import CvBridge, CvBridgeError

from image_recognition_people_detector import PeopleDetector
from image_recognition_msgs.msg import Person
from image_recognition_msgs.srv import DetectPeople, DetectPeopleResponse

class PeopleDetectionNode:
    def __init__(self):
        self._bridge = CvBridge()
        self._detect_people_srv = rospy.Service('detect_people', DetectPeople,
                self._detect_people_srv)
        self._people_detector = PeopleDetector()

        rospy.loginfo("PeopleDetectionNode initialized:")

    def _detect_people_srv(self, req):
        """
        Callback when the DetectPeople service is called
        :param req: DetectPeopleRequest (with a .image attribute)
        :return: DetectPeopleResponse (with a .people attribute)
        """
        # Convert to opencv images
        try:
            bgr_image = self._bridge.imgmsg_to_cv2(req.image, "bgr8")
        except CvBridgeError as e:
            raise Exception("Could not convert image to opencv image: %s" % str(e))

        rospy.loginfo("Detecting people in incoming image")
        people, _ = self._people_detector.recognize(bgr_image)

        return DetectPeopleResponse(people=people)

if __name__ == '__main__':
    rospy.init_node('people_detection')
    node = PeopleDetectionNode()
    rospy.spin()
